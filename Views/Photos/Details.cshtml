@model PhotoManager.Models.Photo

@{
    ViewBag.Title = "Details";
    DateTime now = DateTime.Now;
    TimeSpan diff = now - Model.Date;
    string displayedDate;
    int connectedUserId = ((User)Session["ConnectedUser"]).Id;
    Session["id"] = Model.Id;

    if (diff.TotalMinutes < 1)
    {
        displayedDate = "à l'instant";
    }
    else if (diff.TotalMinutes < 60)
    {
        displayedDate = $"il y a {(int)diff.TotalMinutes} minutes";
    }
    else if (diff.TotalHours < 24 && now.Day == Model.Date.Day)
    {
        displayedDate = $"il y a {(int)diff.TotalHours} heures";
    }
    else
    {
        displayedDate = Model.Date.ToString();
    }

    string displayWhoLiked = "personne pour l'instant";
    if (Model.Likes.Count != 0)
    {
        displayWhoLiked = "";
        foreach (var like in Model.Likes)
        {
            var userWhoLiked = DB.Users.ToList().FirstOrDefault(u => u.Id == like.UserId);
            displayWhoLiked += userWhoLiked.Name + '\n';
        }
    }
}

<div class="container my-5">
    <div class="card">
        <div class="card-header border-0 d-flex align-items-center">
            <img src="@Url.Content(Model.Owner.Avatar ?? "~/Content/avatars/nico.jpg")"
                 alt="@Model.Owner.Name ?? " Nico""
                 class="rounded-circle me-2"
                 style="width:32px; height:32px; object-fit:cover;" />
            <strong>@Model.Owner.Name</strong>
        </div>
        <hr class="my-0" />

        <div class="card-body pt-3">
            <h5 class="fw-bold mb-3">@Model.Title</h5>

            <img src="@Url.Content(Model.Path)"
                 class="img-fluid rounded mb-3"
                 alt="@Model.Title" />

            <div class="d-flex justify-content-between align-items-center text-secondary small mb-3">
                <div>
                    <div class="text-primary small">@displayedDate</div>
                </div>
                <div class="d-flex align-items-center">
                    <i class="cmdIcon like-btn fa-thumbs-up @(Model.Likes.Any(p => p.UserId == ((User)Session["ConnectedUser"]).Id) ? "fa-solid" : "fa-regular")"
                       title="@displayWhoLiked"></i>
                    <span title="@displayWhoLiked" class="like-count ms-1">@Model.Likes.Count</span>
                </div>
            </div>

            <p class="card-text">
                @Model.Description
            </p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var photoId       = @Model.Id;
        var toggleLikeUrl = '@Url.Action("Like", "Photos")';
        var hasLiked      = @(Model.Likes.Any(p => p.UserId == ((User)Session["ConnectedUser"]).Id).ToString().ToLower());

        $(function(){
            var btn = $('.like-btn');
            btn.toggleClass('fa-solid', hasLiked)
                .toggleClass('fa-regular', !hasLiked);

            btn.on('click', function(){
                $.post(toggleLikeUrl, { id: photoId }, function(res){
                    if (!res.success) return alert(res.message);
                    btn.toggleClass('fa-solid fa-regular');
                    $('.like-count').text(res.count);
                }, 'json');
            });
        });
    </script>

}